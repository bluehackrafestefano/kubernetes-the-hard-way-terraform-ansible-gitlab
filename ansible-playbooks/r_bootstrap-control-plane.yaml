---
- hosts: kube_master
  tasks:

    - name: Create the Kubernetes configuration directory
      become: true
      shell: |
        sudo mkdir -p /etc/kubernetes/config

    - name: Download kube-apiserver, kube-controller-manager, kube-scheduler and kubectl
      get_url:
        url: "{{ item }}"
        dest: /tmp
      with_items:
        - https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kube-apiserver
        - https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kube-controller-manager
        - https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kube-scheduler
        - https://storage.googleapis.com/kubernetes-release/release/v1.18.6/bin/linux/amd64/kubectl


    - name: Changing perm of binaries, adding "+x"
      become: true
      file:
        dest: "{{ item }}"
        mode: +x  
      with_items:
        - /tmp/kube-apiserver
        - /tmp/kube-controller-manager
        - /tmp/kube-scheduler
        - /tmp/kubectl

    - name: move the binaries to usr/loca/bin
      become: true
      shell: |
        sudo cp /tmp/kube-apiserver /tmp/kube-controller-manager /tmp/kube-scheduler /tmp/kubectl /usr/local/bin/

    - name: Changing perm of binaries, adding "+x"
      become: true
      file:
        dest: "{{ item }}"
        mode: +x  
      with_items:
        - /usr/local/bin/kube-apiserver
        - /usr/local/bin/kube-controller-manager
        - /usr/local/bin/kube-scheduler
        - /usr/local/bin/kubectl        
        
    - name: Configure the Kubernetes API Server
      become: true
      shell: |
        sudo mkdir -p /var/lib/kubernetes/
        sudo cp ca.pem ca-key.pem kubernetes-key.pem kubernetes.pem \
        service-account-key.pem service-account.pem \
        encryption-config.yaml /var/lib/kubernetes/  

    - name: Create the kube-apiserver.service systemd unit file
      become: true
      shell: |
        INTERNAL_IP=$(cat /tmp/master-private) 

        cat <<EOF | sudo tee /etc/systemd/system/kube-apiserver.service
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        ExecStart=/usr/local/bin/kube-apiserver \\
          --advertise-address=${INTERNAL_IP} \\
          --allow-privileged=true \\
          --apiserver-count=3 \\
          --audit-log-maxage=30 \\
          --audit-log-maxbackup=3 \\
          --audit-log-maxsize=100 \\
          --audit-log-path=/var/log/audit.log \\
          --authorization-mode=Node,RBAC \\
          --bind-address=0.0.0.0 \\
          --client-ca-file=/var/lib/kubernetes/ca.pem \\
          --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \\
          --etcd-cafile=/var/lib/kubernetes/ca.pem \\
          --etcd-certfile=/var/lib/kubernetes/kubernetes.pem \\
          --etcd-keyfile=/var/lib/kubernetes/kubernetes-key.pem \\
          --etcd-servers=https://10.240.0.10:2379,https://10.240.0.11:2379,https://10.240.0.12:2379 \\
          --event-ttl=1h \\
          --encryption-provider-config=/var/lib/kubernetes/encryption-config.yaml \\
          --kubelet-certificate-authority=/var/lib/kubernetes/ca.pem \\
          --kubelet-client-certificate=/var/lib/kubernetes/kubernetes.pem \\
          --kubelet-client-key=/var/lib/kubernetes/kubernetes-key.pem \\
          --kubelet-https=true \\
          --runtime-config='api/all=true' \\
          --service-account-key-file=/var/lib/kubernetes/service-account.pem \\
          --service-cluster-ip-range=10.32.0.0/24 \\
          --service-node-port-range=30000-32767 \\
          --tls-cert-file=/var/lib/kubernetes/kubernetes.pem \\
          --tls-private-key-file=/var/lib/kubernetes/kubernetes-key.pem \\
          --v=2
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
        EOF    

    - name: Create the kube-controller-manager.service systemd unit file
      become: true
      shell: |         
        sudo cp kube-controller-manager.kubeconfig /var/lib/kubernetes/      
        cat <<EOF | sudo tee /etc/systemd/system/kube-controller-manager.service
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        ExecStart=/usr/local/bin/kube-controller-manager \\
          --bind-address=0.0.0.0 \\
          --cluster-cidr=10.200.0.0/16 \\
          --cluster-name=kubernetes \\
          --cluster-signing-cert-file=/var/lib/kubernetes/ca.pem \\
          --cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem \\
          --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig \\
          --leader-elect=true \\
          --root-ca-file=/var/lib/kubernetes/ca.pem \\
          --service-account-private-key-file=/var/lib/kubernetes/service-account-key.pem \\
          --service-cluster-ip-range=10.32.0.0/24 \\
          --use-service-account-credentials=true \\
          --v=2
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
        EOF       

    - name: Move the kube-scheduler kubeconfig into place and create kube-scheduler.yaml
      become: true
      shell: |
        sudo cp kube-scheduler.kubeconfig /var/lib/kubernetes/

        cat <<EOF | sudo tee /etc/kubernetes/config/kube-scheduler.yaml
        apiVersion: kubescheduler.config.k8s.io/v1alpha1
        kind: KubeSchedulerConfiguration
        clientConnection:
          kubeconfig: "/var/lib/kubernetes/kube-scheduler.kubeconfig"
        leaderElection:
          leaderElect: true
        EOF

    - name: Create the kube-scheduler.service systemd unit file
      become: true
      shell: |
        cat <<EOF | sudo tee /etc/systemd/system/kube-scheduler.service
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        ExecStart=/usr/local/bin/kube-scheduler \\
          --config=/etc/kubernetes/config/kube-scheduler.yaml \\
          --v=2
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
        EOF


    - pause:
        seconds: 20         

    - name: Start the Controller Services      
      become: true
      service:        
        name: "{{ item }}"
        state: started
        use: service
      with_items:
        - kube-apiserver 
        - kube-controller-manager 
        - kube-scheduler 

    - name: Enable the Controller Services      
      become: true
      service:
        name: "{{ item }}"
        state: started
        use: service
      with_items:
        - kube-apiserver 
        - kube-controller-manager 
        - kube-scheduler                 
      