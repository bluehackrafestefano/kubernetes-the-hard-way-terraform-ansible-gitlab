---
- hosts: kube_master
  tasks:
    - name: Installing nginx
      become: true
      shell: |
        echo "Updating"

    - name: Update the libraries
      become: true
      apt:
        update_cache: yes

    - name: Install a basic web server to handle HTTP health checks
      become: true
      apt:
        name: nginx
        state: present

    - pause:
        seconds: 10

    - name: Copying ca.pem to /var/lib/kubernetes/
      become: true
      copy: src=ca.pem dest=/var/lib/kubernetes/

    - name: Create kubernetes.default.svc.cluster.local for nginx
      become: true
      shell: |
        cat > kubernetes.default.svc.cluster.local <<EOF
        server {
          listen      80;
          server_name kubernetes.default.svc.cluster.local;

          location /healthz {
            proxy_pass                    https://127.0.0.1:6443/healthz;
            proxy_ssl_trusted_certificate /var/lib/kubernetes/ca.pem;
          }
        }
        EOF
        
    - name: Copying kubernetes.default.svc.cluster.local to /var/lib/kubernetes/
      become: true
      copy: src=kubernetes.default.svc.cluster.local dest=/etc/nginx/sites-available/

    - name: sudo ln
      become: true
      shell: |
        sudo ln -s /etc/nginx/sites-available/kubernetes.default.svc.cluster.local /etc/nginx/sites-enabled/      

    - pause:
        seconds: 10

    - name: Restart the nginx
      become: true
      systemd:
        state: restarted
        name: nginx
        daemon_reload: yes

    - name: Enable the nginx
      become: true
      systemd:
        name: nginx
        daemon_reload: yes

    - name: Verification
      become: true
      shell: |
        kubectl get componentstatuses --kubeconfig admin.kubeconfig
      register: verification_result

    - debug:
        var: verification_result.stdout_lines

    - name: Test the nginx HTTP health check proxy
      become: true
      shell: |
        curl -H "Host: kubernetes.default.svc.cluster.local" -i http://127.0.0.1/healthz
      register: curl_output

    - debug:
        var: curl_output.stdout_lines
