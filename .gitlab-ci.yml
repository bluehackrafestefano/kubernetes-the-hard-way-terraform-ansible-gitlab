stages:
  - create-ssh-key-pair
  - check-prerequisites
  - install-terraform
  - BUILD-INFRASTRUCTURE
  - restart-sshd
  - test-ansible
  - ansible-play-books-client-tools
  - ansible-play-books-create-certs
  - ansible-play-books-create-config-files
  - CONFIG-ANSIBLE
  - MONITORING

  - DESTROY


create-ssh-key-pair:
  stage: create-ssh-key-pair
  script:
    - pwd
    - mkdir -p ~/.ssh
    - |
      #!/bin/bash
      FILE=~/.ssh/id_rsa
      if [ -f "$FILE" ]; then
          echo "$FILE exists."
      else 
          ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa 2>/dev/null <<< y >/dev/null
      fi
    - echo $PUBLICKEYNEW > ~/.ssh/gitlabnew.pub
    - chmod 400 ~/.ssh/gitlabnew.pub
  tags:
    - banuka-gcp-k8s-hard-way

check-prerequisites:
  stage: check-prerequisites
  script:
    - echo "hi"
    - yum update --exclude=google-cloud-sdk -y && sudo yum install wget unzip -y
  tags:
    - banuka-gcp-k8s-hard-way

install-terraform:
  stage: install-terraform
  script:
    - export VER="0.13.0-beta3"
    - wget https://releases.hashicorp.com/terraform/${VER}/terraform_${VER}_linux_amd64.zip
    - unzip terraform_${VER}_linux_amd64.zip
    - mv terraform /usr/local/bin/
    - pwd
    - rm -rf terraform_${VER}_linux_amd64.zip
    - which terraform
  tags:
    - banuka-gcp-k8s-hard-way

build-gcp:
  stage: BUILD-INFRASTRUCTURE
  script:
    - echo "" > ~/.ssh/known_hosts
    - terraform init
    - terraform plan
    - terraform apply --auto-approve
  tags:
    - banuka-gcp-k8s-hard-way

restart-sshd:
  stage: restart-sshd
  script:
    - pwd
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - |
      string="StrictHostKeyChecking no"
      file=/etc/ssh/ssh_config

      grep -qwi "$string$" "$file" && \
      sed -i "s,\(^[^[:alnum:]]*\)\($string$\),\2,i" "$file" || \
      sudo echo "$string" >> "$file"

    - cat /etc/ssh/ssh_config
    - mkdir -p /etc/ansible && touch /etc/ansible/hosts
    - cat /etc/ansible/hosts
    - cd ~/.ssh
    - service sshd restart
    - ls
  tags:
    - banuka-gcp-k8s-hard-way


ansible-ping-test:
  stage: test-ansible
  retry:
    max: 2
    when:
      - always
  script:
    - ansible -m ping all
    - ls
  # when: delayed
  # start_in: 55 seconds
  tags:
    - banuka-gcp-k8s-hard-way


Install-client-tools:
  stage: ansible-play-books-client-tools
  retry:
    max: 2
    when:
      - always
  script:
    - echo "Executing ansible playbooks for installing prerequisites client tools"
    - ansible-playbook ./ansible-playbooks/0_client_tools/1_ca.yaml 
    - nsible-playbook ./ansible-playbooks/0_client_tools/2_kubectl.yaml
  # when: delayed
  # start_in: 1 minutes
  tags:
    - banuka-gcp-k8s-hard-way 

Create-Certificates:
  stage: ansible-play-books-create-certs
  retry:
    max: 2
    when:
      - always
  script:
    - echo "Executing ansible playbooks for generating certficates"
    - ansible-playbook ./ansible-playbooks/1_ca/2_admin.yaml
    - ansible-playbook ./ansible-playbooks/1_ca/3_kubelet.yaml
    - ansible-playbook ./ansible-playbooks/1_ca/4_kube-controller.yaml
    - ansible-playbook ./ansible-playbooks/1_ca/5_kube-proxy.yaml
    - ansible-playbook ./ansible-playbooks/1_ca/6_kube-scheduler.yaml
    - ansible-playbook ./ansible-playbooks/1_ca/7_kube-api-server.yaml
    - ansible-playbook ./ansible-playbooks/1_ca/8_service-account.yaml
    - ansible-playbook ./ansible-playbooks/1_ca/9_distribute-client-server-cert.yaml
  # when: delayed
  # start_in: 1 minutes
  tags:
    - banuka-gcp-k8s-hard-way 


Create-Config-Files:
  stage: ansible-play-books-create-config-files
  retry:
    max: 2
    when:
      - always
  script:
    - echo "Executing ansible playbooks for generating config files"
    - ansible-playbook ./ansible-playbooks/2_config_files/1_kubeconfig_for_workers.yaml
  # when: delayed
  # start_in: 1 minutes
  tags:
    - banuka-gcp-k8s-hard-way    

# destroy_if_failed:
#   stage: DESTROY
#   script:
#     - terraform init
#     - terraform destroy --auto-approve
#   when: on_failure
#   tags:
#     - banuka-gcp-k8s-hard-way

destroy:
  stage: DESTROY
  script:
    - terraform init
    - terraform destroy --auto-approve
  when: manual
  tags:
    - banuka-gcp-k8s-hard-way
